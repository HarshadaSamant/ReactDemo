{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/harshada/react/react-first-app/react-first-app/src/App.js\";\nimport React, { Component } from 'react'; // import Radium, { StyleRoot } from 'radium';\n\nimport styled from 'styled-components';\nimport './App.css';\nimport Person from './Components/Person/Person';\nimport './Components/Person/style.css';\nconst StyledButton = styled.button`\n  background-color: #a83c32,\n  color: #fff,\n  font-size: 18px,\n  padding: 8px 20px,\n  border-radius: 5px,\n  border: none,\n  :hover: {\n    background-color: green,\n    color: yellow\n  },\n  :focus: {\n    outline: none\n  },`;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      applications: [{\n        id: '1',\n        person: \"Lina Hex\",\n        name: \"Login system\",\n        language: 'C++'\n      }, {\n        id: '2',\n        person: \"Aditi Rao\",\n        name: \"employement system\",\n        language: \"Java\"\n      }, {\n        id: '3',\n        person: \"Max Hedge\",\n        name: \"Theme builder\",\n        language: \"React\",\n        days: \"30\"\n      }],\n      showPerson: false\n    };\n\n    this.changeDaysHandler = newDay => {\n      this.setState({\n        applications: [{\n          name: \"Login system\",\n          language: 'C++'\n        }, {\n          name: \"employement system\",\n          language: \"Java\"\n        }, {\n          name: \"Theme builder\",\n          language: \"React\",\n          days: newDay\n        }]\n      });\n    };\n\n    this.changeNameHandler = (event, id) => {\n      const personIndex = this.state.applications.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.applications[personIndex]\n      };\n      person.name = event.target.value;\n      const persons = [...this.state.applications];\n      persons[personIndex] = person;\n      this.setState({\n        // applications: [\n        //   { name: \"Login system\", language: 'C++' },\n        //   { name: \"employement system\", language: \"Java\" },\n        //   { name: event.target.value, language: \"React\", days: \"52\"}\n        // ]\n        applications: persons\n      });\n    };\n\n    this.toggleSwitchHandler = event => {\n      const doesShow = this.state.showPerson;\n      console.log(\"am I visible \" + doesShow);\n      this.setState({\n        showPerson: !doesShow\n      });\n    };\n\n    this.showAlertHandler = event => {\n      alert(\"hey, You clicked component\");\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const person = this.state.applications.slice();  //creates duplicate of original array and store it in new const\n      const person = [...this.state.applications];\n      person.splice(personIndex, 1);\n      this.setState({\n        applications: person\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: \"rgba(221, 221, 221, 0.37)\",\n      color: \"Blue\",\n      padding: '10px'\n    }; // const personStyle = {\n    //   backgroundColor: \"#a83c32\",\n    //   color: \"#fff\",\n    //   fontSize: '18px',\n    //   padding: '8px 20px',\n    //   borderRadius: '5px',\n    //   border: 'none',\n    //   ':hover': {\n    //     backgroundColor: 'green',\n    //     color: 'yellow'\n    //   },\n    //   ':focus': {\n    //     outline: 'none'\n    //   },\n    // }\n\n    let personVisible = null;\n\n    if (this.state.showPerson) {\n      personVisible = /*#__PURE__*/React.createElement(Person, {\n        className: \"Person2\",\n        name: \"Mini\",\n        click: this.showAlertHandler,\n        changed: this.changeNameHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Person2-conatiner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, \"I am learning react\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, \"This is a lesson about props and state. I am gonna create project based on \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 93\n        }\n      }, \" \", this.state.applications[2].language, \" \"), \" and my application name is \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 196\n        }\n      }, \" \", this.state.applications[2].name, \" \"), \" in less than \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 281\n        }\n      }, \" \", this.state.applications[2].days), \" days \"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.changeDaysHandler('80'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }, \"more Days\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.changeDaysHandler.bind(this, '24'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, \"less Days\")))); // personStyle.backgroundColor = '#edcdca';\n      // personStyle.color = '#000';\n      // personStyle[':hover'] = {\n      //   backgroundColor: 'red',\n      //   color: 'white'\n      // };\n    }\n\n    return /*#__PURE__*/React.createElement(StyleRoot, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Hi, I am React App\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"This is great!!!\"), /*#__PURE__*/React.createElement(StyledButton, {\n      buttonAlt: this.state.showPerson,\n      onClick: this.toggleSwitchHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, \"Show Person Info\"), this.state.showPerson ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, \"Hey, this is visible person info of parent component\"), /*#__PURE__*/React.createElement(Person, {\n      className: \"Person1\",\n      name: \"max\",\n      click: this.showAlertHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \"I am loving it\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"Nothing to show. Please click above button to show details\")), personVisible, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"We have list of Projects on various technologies\"), this.state.applications.map((application, index) => {\n      return /*#__PURE__*/React.createElement(Person, {\n        name: application.person,\n        key: application.id,\n        click: this.deletePersonHandler.bind(this, index),\n        changed: event => this.changeNameHandler(event, application.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      });\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/apple/Desktop/harshada/react/react-first-app/react-first-app/src/App.js"],"names":["React","Component","styled","Person","StyledButton","button","App","state","applications","id","person","name","language","days","showPerson","changeDaysHandler","newDay","setState","changeNameHandler","event","personIndex","findIndex","p","target","value","persons","toggleSwitchHandler","doesShow","console","log","showAlertHandler","alert","deletePersonHandler","splice","render","style","backgroundColor","color","padding","personVisible","bind","map","application","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,+BAAP;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAACG,MAAO;;;;;;;;;;;;;KAAnC;;AAgBA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,YAAY,EAAE,CACZ;AAAEC,QAAAA,EAAE,EAAC,GAAL;AAAUC,QAAAA,MAAM,EAAC,UAAjB;AAA6BC,QAAAA,IAAI,EAAE,cAAnC;AAAmDC,QAAAA,QAAQ,EAAE;AAA7D,OADY,EAEZ;AAAEH,QAAAA,EAAE,EAAC,GAAL;AAAUC,QAAAA,MAAM,EAAC,WAAjB;AAA8BC,QAAAA,IAAI,EAAE,oBAApC;AAA0DC,QAAAA,QAAQ,EAAE;AAApE,OAFY,EAGZ;AAAEH,QAAAA,EAAE,EAAC,GAAL;AAAUC,QAAAA,MAAM,EAAC,WAAjB;AAA8BC,QAAAA,IAAI,EAAE,eAApC;AAAqDC,QAAAA,QAAQ,EAAE,OAA/D;AAAwEC,QAAAA,IAAI,EAAE;AAA9E,OAHY,CADR;AAMNC,MAAAA,UAAU,EAAE;AANN,KADkB;;AAAA,SAU1BC,iBAV0B,GAULC,MAAD,IAAY;AAC9B,WAAKC,QAAL,CAAc;AACZT,QAAAA,YAAY,EAAE,CACZ;AAAEG,UAAAA,IAAI,EAAE,cAAR;AAAwBC,UAAAA,QAAQ,EAAE;AAAlC,SADY,EAEZ;AAAED,UAAAA,IAAI,EAAE,oBAAR;AAA8BC,UAAAA,QAAQ,EAAE;AAAxC,SAFY,EAGZ;AAAED,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,QAAQ,EAAE,OAAnC;AAA4CC,UAAAA,IAAI,EAAEG;AAAlD,SAHY;AADF,OAAd;AAOD,KAlByB;;AAAA,SAoB1BE,iBApB0B,GAoBN,CAACC,KAAD,EAAQV,EAAR,KAAgB;AAClC,YAAMW,WAAW,GAAG,KAAKb,KAAL,CAAWC,YAAX,CAAwBa,SAAxB,CAAkCC,CAAC,IAAI;AACzD,eAAOA,CAAC,CAACb,EAAF,KAASA,EAAhB;AACD,OAFmB,CAApB;AAIA,YAAMC,MAAM,GAAG,EAAC,GAAG,KAAKH,KAAL,CAAWC,YAAX,CAAwBY,WAAxB;AAAJ,OAAf;AAEAV,MAAAA,MAAM,CAACC,IAAP,GAAcQ,KAAK,CAACI,MAAN,CAAaC,KAA3B;AAEA,YAAMC,OAAO,GAAG,CAAC,GAAG,KAAKlB,KAAL,CAAWC,YAAf,CAAhB;AACAiB,MAAAA,OAAO,CAACL,WAAD,CAAP,GAAuBV,MAAvB;AAEA,WAAKO,QAAL,CAAc;AACZ;AACA;AACA;AACA;AACA;AACAT,QAAAA,YAAY,EAAEiB;AANF,OAAd;AAQD,KAxCyB;;AAAA,SA0C1BC,mBA1C0B,GA0CHP,KAAD,IAAY;AAChC,YAAMQ,QAAQ,GAAG,KAAKpB,KAAL,CAAWO,UAA5B;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBF,QAA9B;AACA,WAAKV,QAAL,CAAc;AAACH,QAAAA,UAAU,EAAG,CAACa;AAAf,OAAd;AACD,KA9CyB;;AAAA,SAgD1BG,gBAhD0B,GAgDNX,KAAD,IAAW;AAC7BY,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACA,KAlDyB;;AAAA,SAoD1BC,mBApD0B,GAoDHZ,WAAD,IAAiB;AACrC;AACA,YAAMV,MAAM,GAAG,CAAC,GAAG,KAAKH,KAAL,CAAWC,YAAf,CAAf;AACAE,MAAAA,MAAM,CAACuB,MAAP,CAAcb,WAAd,EAA2B,CAA3B;AACA,WAAKH,QAAL,CAAc;AAACT,QAAAA,YAAY,EAAGE;AAAhB,OAAd;AACD,KAzDyB;AAAA;;AA2D1BwB,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG;AACZC,MAAAA,eAAe,EAAE,2BADL;AAEZC,MAAAA,KAAK,EAAE,MAFK;AAGZC,MAAAA,OAAO,EAAE;AAHG,KAAd,CADO,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,QAAIC,aAAa,GAAG,IAApB;;AAEA,QAAG,KAAKhC,KAAL,CAAWO,UAAd,EAA0B;AACxByB,MAAAA,aAAa,gBACX,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,IAAI,EAAC,MAAjC;AAAwC,QAAA,KAAK,EAAE,KAAKT,gBAApD;AAAsE,QAAA,OAAO,EAAE,KAAKZ,iBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAA8E;AAAM,QAAA,KAAK,EAAE;AAACmB,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+B,KAAK9B,KAAL,CAAWC,YAAX,CAAwB,CAAxB,EAA2BI,QAA1D,MAA9E,+CAAqL;AAAM,QAAA,KAAK,EAAE;AAACyB,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+B,KAAK9B,KAAL,CAAWC,YAAX,CAAwB,CAAxB,EAA2BG,IAA1D,MAArL,iCAA0Q;AAAM,QAAA,KAAK,EAAE;AAAC0B,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+B,KAAK9B,KAAL,CAAWC,YAAX,CAAwB,CAAxB,EAA2BK,IAA1D,CAA1Q,WADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKE,iBAAL,CAAuB,IAAvB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKA,iBAAL,CAAuByB,IAAvB,CAA4B,IAA5B,EAAkC,IAAlC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CAFF,CADF,CADF,CADwB,CAaxB;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAE,KAAKjC,KAAL,CAAWO,UAApC;AAAgD,MAAA,OAAO,EAAE,KAAKY,mBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,EAIG,KAAKnB,KAAL,CAAWO,UAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,eAEA,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,IAAI,EAAC,KAAjC;AAAuC,MAAA,KAAK,EAAE,KAAKgB,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA,CADD,gBAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAG,MAAA,KAAK,EAAEK,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAAL,CARX,EAUGI,aAVH,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAbF,EAcG,KAAKhC,KAAL,CAAWC,YAAX,CAAwBiC,GAAxB,CAA4B,CAACC,WAAD,EAAcC,KAAd,KAAyB;AACpD,0BACQ,oBAAC,MAAD;AACE,QAAA,IAAI,EAAED,WAAW,CAAChC,MADpB;AAEE,QAAA,GAAG,EAAEgC,WAAW,CAACjC,EAFnB;AAGE,QAAA,KAAK,EAAE,KAAKuB,mBAAL,CAAyBQ,IAAzB,CAA8B,IAA9B,EAAoCG,KAApC,CAHT;AAIE,QAAA,OAAO,EAAGxB,KAAD,IAAW,KAAKD,iBAAL,CAAuBC,KAAvB,EAA8BuB,WAAW,CAACjC,EAA1C,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR;AAQD,KATA,CAdH,CADF,CADF;AA6BD;;AAxIyB;;AA2I5B,eAAeH,GAAf","sourcesContent":["import React, {Component} from 'react';\n// import Radium, { StyleRoot } from 'radium';\nimport styled from 'styled-components';\nimport './App.css';\nimport Person from './Components/Person/Person';\nimport './Components/Person/style.css';\n\nconst StyledButton = styled.button`\n  background-color: #a83c32,\n  color: #fff,\n  font-size: 18px,\n  padding: 8px 20px,\n  border-radius: 5px,\n  border: none,\n  :hover: {\n    background-color: green,\n    color: yellow\n  },\n  :focus: {\n    outline: none\n  },`;\n\n\nclass App extends Component {\n  state = {\n    applications: [\n      { id:'1', person:\"Lina Hex\", name: \"Login system\", language: 'C++' },\n      { id:'2', person:\"Aditi Rao\", name: \"employement system\", language: \"Java\" },\n      { id:'3', person:\"Max Hedge\", name: \"Theme builder\", language: \"React\", days: \"30\" }\n    ],\n    showPerson: false\n  }\n\n  changeDaysHandler = (newDay) => {\n    this.setState({\n      applications: [\n        { name: \"Login system\", language: 'C++' },\n        { name: \"employement system\", language: \"Java\" },\n        { name: \"Theme builder\", language: \"React\", days: newDay}\n      ]\n    })\n  }\n\n  changeNameHandler = (event, id ) => {\n    const personIndex = this.state.applications.findIndex(p => {\n      return p.id === id;\n    });\n\n    const person = {...this.state.applications[personIndex]}\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.applications];\n    persons[personIndex] = person;\n\n    this.setState({\n      // applications: [\n      //   { name: \"Login system\", language: 'C++' },\n      //   { name: \"employement system\", language: \"Java\" },\n      //   { name: event.target.value, language: \"React\", days: \"52\"}\n      // ]\n      applications: persons\n    });\n  }\n\n  toggleSwitchHandler = (event)  => {\n    const doesShow = this.state.showPerson;\n    console.log(\"am I visible \" + doesShow);\n    this.setState({showPerson : !doesShow});\n  }\n\n  showAlertHandler = (event) => {\n   alert(\"hey, You clicked component\")\n  }\n\n  deletePersonHandler = (personIndex) => {\n    // const person = this.state.applications.slice();  //creates duplicate of original array and store it in new const\n    const person = [...this.state.applications];\n    person.splice(personIndex, 1);\n    this.setState({applications : person});\n  }\n\n  render() {\n    const style = {\n      backgroundColor: \"rgba(221, 221, 221, 0.37)\",\n      color: \"Blue\",\n      padding: '10px'\n    }\n\n    // const personStyle = {\n    //   backgroundColor: \"#a83c32\",\n    //   color: \"#fff\",\n    //   fontSize: '18px',\n    //   padding: '8px 20px',\n    //   borderRadius: '5px',\n    //   border: 'none',\n    //   ':hover': {\n    //     backgroundColor: 'green',\n    //     color: 'yellow'\n    //   },\n    //   ':focus': {\n    //     outline: 'none'\n    //   },\n    // }\n\n\n\n    let personVisible = null;\n\n    if(this.state.showPerson) {\n      personVisible = (\n        <Person className=\"Person2\" name=\"Mini\" click={this.showAlertHandler} changed={this.changeNameHandler}>\n          <div className=\"Person2-conatiner\">\n            <h3>I am learning react</h3>\n            <div>\n              <p>This is a lesson about props and state. I am gonna create project based on <span style={{color: \"red\"}}> {this.state.applications[2].language} </span> and my application name is <span style={{color: \"red\"}}> {this.state.applications[2].name} </span> in less than <span style={{color: \"red\"}}> {this.state.applications[2].days}</span> days </p>\n              <button onClick={() => this.changeDaysHandler('80')}>more Days</button>\n              <button onClick={this.changeDaysHandler.bind(this, '24')}>less Days</button>\n            </div>\n          </div>\n        </Person>\n      );\n      // personStyle.backgroundColor = '#edcdca';\n      // personStyle.color = '#000';\n      // personStyle[':hover'] = {\n      //   backgroundColor: 'red',\n      //   color: 'white'\n      // };\n    }\n\n    return (\n      <StyleRoot>\n        <div className=\"app\">\n          <h1>Hi, I am React App</h1>\n          <p>This is great!!!</p>\n          <StyledButton buttonAlt={this.state.showPerson} onClick={this.toggleSwitchHandler}>Show Person Info</StyledButton>\n          {this.state.showPerson ?\n            <div>\n              <h1>Hey, this is visible person info of parent component</h1>\n            <Person className=\"Person1\" name=\"max\" click={this.showAlertHandler}>I am loving it</Person>\n          </div> : <div><p style={style}>Nothing to show. Please click above button to show details</p></div>\n          }\n          {personVisible}\n\n\n          <h2>We have list of Projects on various technologies</h2>\n          {this.state.applications.map((application, index ) => {\n            return (\n                    <Person \n                      name={application.person}\n                      key={application.id} \n                      click={this.deletePersonHandler.bind(this, index)}\n                      changed={(event) => this.changeNameHandler(event, application.id)}\n                    />\n                  )\n          })}\n        </div>\n      </StyleRoot>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}